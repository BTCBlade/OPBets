{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tommynchen/Downloads/opbets/frontend/src/components/LoginFormModal/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch } from \"react-redux\";\nimport \"./LoginForm.css\";\n\nfunction LoginForm() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({\n      credential,\n      password\n    })).catch(res => {\n      if (res.data && res.data.errors) setErrors(res.data.errors);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username or Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: credential,\n          onChange: e => setCredential(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoginForm, \"fzr++e43uIkaGaiy4lw1Jcx/dmE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/tommynchen/Downloads/opbets/frontend/src/components/LoginFormModal/LoginForm.js"],"names":["React","useState","sessionActions","useDispatch","LoginForm","dispatch","credential","setCredential","password","setPassword","errors","setErrors","handleSubmit","e","preventDefault","login","catch","res","data","map","error","idx","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,cAAZ,MAAgC,qBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,iBAAP;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,SAAS,CAAC,EAAD,CAAT;AACA,WAAON,QAAQ,CAACH,cAAc,CAACa,KAAf,CAAqB;AAAET,MAAAA,UAAF;AAAcE,MAAAA;AAAd,KAArB,CAAD,CAAR,CAAyDQ,KAAzD,CACJC,GAAD,IAAS;AACP,UAAIA,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASR,MAAzB,EAAiCC,SAAS,CAACM,GAAG,CAACC,IAAJ,CAASR,MAAV,CAAT;AAClC,KAHI,CAAP;AAKD,GARD;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAAA,8BACE;AAAA,kBACGF,MAAM,CAACS,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACV;AAAA,oBAAeD;AAAf,WAASC,GAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,qDAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEf,UAFT;AAGE,UAAA,QAAQ,EAAGO,CAAD,IAAON,aAAa,CAACM,CAAC,CAACS,MAAF,CAASC,KAAV,CAHhC;AAIE,UAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAeE;AAAA,4CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAEf,QAFT;AAGE,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACS,MAAF,CAASC,KAAV,CAH9B;AAIE,UAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAwBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA+BD;;GA/CQnB,S;UACUD,W;;;KADVC,S;AAiDT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch } from \"react-redux\";\nimport \"./LoginForm.css\";\n\nfunction LoginForm() {\n  const dispatch = useDispatch();\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({ credential, password })).catch(\n      (res) => {\n        if (res.data && res.data.errors) setErrors(res.data.errors);\n      }\n    );\n  };\n\n  return (\n    <>\n      <h1>Log In</h1>\n      <form onSubmit={handleSubmit}>\n        <ul>\n          {errors.map((error, idx) => (\n            <li key={idx}>{error}</li>\n          ))}\n        </ul>\n        <label>\n          Username or Email\n          <input\n            type=\"text\"\n            value={credential}\n            onChange={(e) => setCredential(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\">Log In</button>\n      </form>\n    </>\n  );\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}